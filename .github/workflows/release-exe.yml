name: Build and Release EXE

permissions:
  contents: write

on:
  # 他のワークフローからの呼び出しをサポート
  workflow_call:
    inputs:
      tag_name:
        description: 'ビルド対象のタグ名'
        required: true
        type: string
      is_prerelease:
        description: 'プレリリースかどうか'
        required: false
        type: string
        default: 'false'

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
        with:
          # メインブランチをチェックアウト（タグはビルド成功後に作成）
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: タグ情報の取得
        id: tag_info
        run: |
          # タグ名を取得
          $tag = "${{ inputs.tag_name }}"
          $isPrerelease = "${{ inputs.is_prerelease }}" -eq "true"
          
          echo "tag_name=$tag" >> $env:GITHUB_OUTPUT
          echo "is_prerelease=$isPrerelease" >> $env:GITHUB_OUTPUT
          
      - name: Pythonセットアップ
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.7'

      - name: 依存パッケージインストール
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: バージョン情報を埋め込む
        run: |
          # タグからバージョン番号を抽出（vプレフィックスを削除）
          $version = "${{ inputs.tag_name }}".TrimStart('v')
          $buildDate = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
          
          # バージョン情報ファイルを作成
          $versionContent = @"
          """バージョン情報を管理するモジュール。

          このファイルはGitHub Actionsビルド時に自動生成されます。
          """

          # リリースバージョン
          __version__ = "$version"
          __build_date__ = "$buildDate"
          "@
          
          Set-Content -Path "src/version.py" -Value $versionContent -Encoding UTF8
          
          # 確認表示
          Write-Host "バージョン情報を埋め込みました:"
          Get-Content -Path "src/version.py"

      - name: EXEビルド
        run: |
          pyinstaller WindowCaptureReading.spec

      - name: Git設定
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: タグの作成とプッシュ
        run: |
          $tagToCreate = "${{ inputs.tag_name }}"
          $isPrerelease = "${{ inputs.is_prerelease }}" -eq "true"

          # タグのメッセージを作成
          $tagMessage = "Release $tagToCreate"
          if ($isPrerelease) {
            $tagMessage = "Prerelease $tagToCreate"
          }

          # 注釈付きタグを作成
          git tag -a $tagToCreate -m "$tagMessage"

          # タグをプッシュ
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git $tagToCreate

          echo "タグ '$tagToCreate' を作成し、プッシュしました"

      - name: リリース作成とEXEファイルアップロード
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag_info.outputs.tag_name }}
          name: Release ${{ steps.tag_info.outputs.tag_name }}
          draft: false
          prerelease: ${{ steps.tag_info.outputs.is_prerelease == 'True' }}
          files: dist/WindowCaptureReading.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 